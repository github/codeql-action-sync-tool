name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Install Pkger
        run: go install --mod=readonly github.com/markbates/pkger/cmd/pkger
      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: --clean --snapshot

  test:
    name: Test
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Test
        run: go test ./...

  integration_ghes:
    name: Integration Test (GitHub Enterprise Server)
    runs-on: ubuntu-latest-xl
    if: ${{ github.event != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Build
        run: go build
      - name: Test
        run: ./codeql-action-sync sync --destination-url https://ghe.io/ --destination-repository codeql-action-sync-tool/integration-test
        env:
          CODEQL_ACTION_SYNC_TOOL_DESTINATION_TOKEN: ${{ secrets.INTEGRATION_TEST_GHES_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Check Modules
        run: |
          go mod tidy
          if [ ! -z "$(git status --porcelain=v1)" ]; then
            >&2 echo "Please run \`go mod tidy\` and commit the result."
            exit 1
          fi
      - name: Lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.6

  licensedci:
    name: Check Licenses
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      - name: Setup licensedci
        uses: jonabc/setup-licensed@v1
        with:
          version: 2.x
      - name: Run licensedci
        run: licensed status
